
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AuditoriaScalarFieldEnum = {
  id: 'id',
  tabla_afectada: 'tabla_afectada',
  accion: 'accion',
  usuario_id: 'usuario_id',
  fecha: 'fecha',
  datos_anteriores: 'datos_anteriores',
  datos_nuevos: 'datos_nuevos'
};

exports.Prisma.CategoriasScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre'
};

exports.Prisma.ConfiguracionScalarFieldEnum = {
  id: 'id',
  nombre_negocio: 'nombre_negocio',
  direccion: 'direccion',
  telefono: 'telefono',
  horario: 'horario',
  logo: 'logo'
};

exports.Prisma.ContactoScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  correo: 'correo',
  mensaje: 'mensaje',
  fecha: 'fecha'
};

exports.Prisma.Detalle_pedidoScalarFieldEnum = {
  id: 'id',
  pedido_id: 'pedido_id',
  producto_id: 'producto_id',
  cantidad: 'cantidad',
  subtotal: 'subtotal'
};

exports.Prisma.Logs_adminScalarFieldEnum = {
  id: 'id',
  admin_id: 'admin_id',
  accion: 'accion',
  descripcion: 'descripcion',
  fecha: 'fecha'
};

exports.Prisma.MesasScalarFieldEnum = {
  id: 'id',
  numero: 'numero',
  capacidad: 'capacidad',
  disponible: 'disponible'
};

exports.Prisma.PagosScalarFieldEnum = {
  id: 'id',
  pedido_id: 'pedido_id',
  metodo: 'metodo',
  estado: 'estado',
  fecha: 'fecha',
  referencia: 'referencia'
};

exports.Prisma.PedidosScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  fecha: 'fecha',
  estado: 'estado',
  total: 'total',
  observaciones: 'observaciones'
};

exports.Prisma.ProductosScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  precio: 'precio',
  imagen: 'imagen',
  categoria_id: 'categoria_id',
  disponible: 'disponible',
  fecha_creacion: 'fecha_creacion'
};

exports.Prisma.ReservasScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  mesa_id: 'mesa_id',
  fecha_reserva: 'fecha_reserva',
  cantidad_personas: 'cantidad_personas',
  estado: 'estado',
  observaciones: 'observaciones'
};

exports.Prisma.RolesScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre'
};

exports.Prisma.UsuariosScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  correo: 'correo',
  contrase_a: 'contrase_a',
  telefono: 'telefono',
  direccion: 'direccion',
  rol_id: 'rol_id',
  fecha_registro: 'fecha_registro'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  auditoria: 'auditoria',
  categorias: 'categorias',
  configuracion: 'configuracion',
  contacto: 'contacto',
  detalle_pedido: 'detalle_pedido',
  logs_admin: 'logs_admin',
  mesas: 'mesas',
  pagos: 'pagos',
  pedidos: 'pedidos',
  productos: 'productos',
  reservas: 'reservas',
  roles: 'roles',
  usuarios: 'usuarios'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
